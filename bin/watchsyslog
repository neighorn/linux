#!/usr/bin/perl
#require "syslog.pl"

# Set up our environment.
$Prog=$0;
$Prog=~s-^.*/(.*)-$1-;
$ENV{'PATH'}="/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin";
$PIDFile="/var/run/${Prog}.pid";
%BannedPorts = (
	1433=>'MS-SQL',
	1075=>'Unknown',
	1080=>'SOCKS',
	);

$|=1;

# First, make sure we're not already running.
if (open (PIDFILE,"< $PIDFile") ) {
	# File exists.
	$pid=<PIDFILE>;
	chop $pid;
	if ( `ps -o command -p $pid 2> /dev/null` =~ /$Prog/ ) {
		#The process exists and is running this program.
		for $KillType (-15,-9) {
			if (-d "/proc/$pid") {
				# We're already running.  Kill that one.
				kill $KillType, $pid;
				#Tried following - killed all iptables
				#$pgroup=`ps -p $pid -o pgrp --no-headers`;
				#kill $KillType,$pgroup;
				sleep(2);
			}		# End IF -d
		}			# End FOR $KillType
	}				# End IF -f
}					# End IF open
close(PIDFILE);
open(PIDFILE,"> $PIDFile") || die("Unable to open $PIDFile: $!\n");
print PIDFILE "$$\n";
close PIDFILE;

#&openlog($program,'cons','user');

# Next, find out what we're already rejecting.
open(IPTABLE,"iptables -L AbuseCheck -n |") || die("Unable to read IP Tables");
#target     prot opt source               destination
#LogDrop    all  --  200.45.247.158       0.0.0.0/0
while (<IPTABLE>) {
	($target,$protocol,$options,$source,$dest)=split(/\s+/);
	$BannedIPs{$source}=1
		if ($source =~ /\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/);
}
close(IPTABLE);

open(SYSLOG,"| /usr/local/bin/ir -lt $Prog") || die("Unable to open ir.");
select SYSLOG; $| = 1; select STDOUT;

$BannedIPs{"71.245.97.54"} = 1;  # Nessus testing address.

open(INSYSLOG,
	"grep 'kernel: Reject:' /var/log/syslog;tail -f /var/log/syslog |") 

	|| die("Unable to read syslog: $!\n");

#Nov 22 17:55:50 firewall kernel: Reject:IN=eth2 OUT= MAC=00:80:c8:cf:c7:93:00:10:67:00:f9:cf:08:00 SRC=24.185.94.57 DST=66.12.121.238 LEN=78 TOS=0x00 PREC=0x00 TTL=99 ID=57421 PROTO=UDP SPT=1028 DPT=137 LEN=58
while (<INSYSLOG>) {
	next if (! /kernel: Reject:IN=eth2.*SRC=([0-9.]+).*DPT=([0-9]+)/);
	# Found one!
	$IPAddress=$1;
	$DestPort=$2;
	next if ($BannedIPs{$IPAddress}); #Already banned.
	#syslog('notice',"echo Adding $IPAddress to AbuseCheck rules: $Line");
	next unless ($BannedPorts{$DestPort}); #Not on our banned-port list.
	print SYSLOG "echo $Prog adding $IPAddress to AbuseCheck rules";
	system("iptables -A AbuseCheck -s $IPAddress -j LogDrop");
	$BannedIPs{$IPAddress}=1;
	`printf "%-15s %-10s %8s %s %s\n" $IPAddress \$(date "+%Y-%m-%d %H:%M:%S") $Prog $DestPort >> /var/run/AbuseCheck`;
}


