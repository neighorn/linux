#! /usr/bin/perl

use strict;
use warnings;
use Sys::Syslog;
use Getopt::Std;
use IO::Socket;
use File::Temp qw(tempfile);

my $opt_v;		# Verbose option.
my $opt_t;		# Test option.
my $opt_q;		# Quiet option.
my $opt_P='pager@martinconsulting.com';		# Who to page on errors.
my $opt_s;		# Alert subject

my @NowDown;		# Newly down items.
my @NowUp;		# Newly up items.
my @StillDown;		# On-going down items.
my %DownItems;		# List of items previously down.

my $StatusFile="$ENV{HOME}/bin/checkall.dat";
my $RepeatThreshold=2;		# Set number of hours to re-report down items.

getopts('qv:P:s:');

if (!$opt_s) {
	my $HostName = `hostname`;
	chomp $HostName;
	$opt_s = "$HostName alert";
}

openlog("checkall");

# Load table of items that have already been reported down.
if (open(STATUS,'<',$StatusFile)) {
	# Load up any items that were previously down.
	while (<STATUS>) {
		my($Time,undef,$Desc)=split(/\s+/,$_,3);
    		$Desc=~s/^\s*(.*)\s*$/$1/;
		if ($Time + $RepeatThreshold*60*60 > time()) {
			$DownItems{$Desc}=$Time;
		}
	}
	close STATUS;
}
else {
	warn "Open failed: $!\n";
}

my $DownMessages;
if ($opt_q) {
	# Prepare the Down-Message header text.
	my($Minutes,$Hours)=(localtime())[1,2];
	$Minutes="0$Minutes" if ($Minutes <= 9);
	$DownMessages="The following services were detected down at 
$Hours:$Minutes...";
}

my $errors=0;
while (<DATA>) {
    next if (/^\s*#/);		# skip comments.
    chomp;
    my ($TargetList,$Desc,$DownAction,$UpAction,undef)=split(/#/,$_);	# break out data elements.
    $Desc=~s/^\s*(.*)\s*$/$1/;
    print "\nChecking $Desc\n" if ($opt_v);
    my $GroupOK=0;
    my $socket;
    foreach (split(/,/,$TargetList)) {
	my($host,$port)=split(/:/);
        # try to connect.
        if ($socket=IO::Socket::INET->new(PeerAddr=>"$host:$port",Timeout=>20)) {
	    # Connected OK.
            printf "\t%s:%d OK - %s\n", $host, $port, $Desc if ($opt_v);
            close($socket);
	    $GroupOK=1;		# One of this target group worked.
	    last;		# Don't need to do any further checking.
	} else {
	    # Connection is down.
            printf "\t%d DOWN: $!\n", $Desc if ($opt_v);
            close($socket) if ($socket);
        }
    }
    if ($GroupOK) {
	printf "%-25.25s OK\n", $Desc if (!$opt_q);
	# Trigger up action if it was down before.
	if ($DownItems{$Desc}) {
		syslog('INFO','%s is now up',$Desc)
			if ($^O !~ /MSWin/);
		if ($UpAction) {
			print "Triggering Up-action for $Desc\n" if ($opt_v);
			$UpAction =~ s/%D/$Desc/g;
			system($UpAction);
		}
		push @NowUp, $Desc;
	} else {
		syslog('INFO','%s is still up',$Desc)
			if ($^O !~ /MSWin/);
	}
	delete $DownItems{$Desc};	# No longer down, if it was before.
    } elsif ($DownItems{$Desc}) {
	# Connection failed, but we have already reported it.
	syslog('INFO','%s is still down',$Desc);
        printf "\t%s still DOWN\n", $Desc
		if (!$opt_q);
	push @StillDown, $Desc;
    } else {
	# Connection is newly down.
	syslog('INFO','%s is now down',$Desc);
	if ($opt_q) {
		$DownMessages.="\r\n\t$Desc";
	} else {
	    	printf "%-25.25s\tDOWN\n", $Desc;
	}
	if ($DownAction) {
		print "Triggering down-action for $Desc\n" if ($opt_v);
		$DownAction =~ s/%D/$Desc/g;
		system($DownAction);		# Trigger action.
	}
	$DownItems{$Desc}=time();
	push @NowDown,$Desc;
	$errors=1;
    }
}

if (@NowDown+@NowUp > 0 and $opt_P) {
	my($MAIL,$MailFile) = tempfile();
	
	if (@NowDown) {
		print $MAIL "Now down: " . join(', ',@NowDown) . "\n";
	}
	if (@StillDown) {
		print $MAIL "Still down: " . join(', ',@StillDown) . "\n";
	}
	if (@NowUp) {
		print $MAIL "Now up: " . join(', ',@NowUp) . "\n";
	}
	close $MAIL;
	system("mail -s \"$opt_s\" $opt_P < $MailFile") && warn "Unable to send mail: $!\n";
	unlink $MailFile;
}

# Update list of down items.
if (open (STATUS,"> $StatusFile")) {
	foreach (keys(%DownItems)) {
		my ($sec,$min,$hour)=(localtime($DownItems{$_}))[0..2];
		printf STATUS "%lu %02d:%02d:%02d %s\n",
			$DownItems{$_},$hour,$sec,$min,$_;
	}
	close STATUS;
} else {
	warn("Unable to update $StatusFile: $!\n");
	$errors=1;
}

__END__
# Target:port#		Description#	Down Action	#	Up Action
www.ibm.com:80,www.tri-met.org:80,www.amazon.com:80)#External network
frank:22,ben:22,office:139,julie:139#Internal network
71.245.97.50:53#external named
71.245.97.50:2022#external ssh
frank:22#frank (asterisk)
192.168.120.1:22#internal ssh
localhost:25#postfix:25
localhost:10025#postfix:10025
localhost:10023#postgrey
localhost:10024#amavis
localhost:3310#clamd
localhost:110#dovecot:pop3
localhost:143#dovecot:imap
localhost:993#dovecot:imaps
localhost:995#dovecot:pop3s
localhost:80#apache:80
localhost:443#apache:443
localhost:631#cups
localhost:199#snmpd
