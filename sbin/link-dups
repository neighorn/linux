#! /usr/bin/sh
#
# quick code to replace duplicate files in dirvish trees with hardlinks.
#
# Assumes the same relative name.

if (( $# != 2 ))
then
    echo "usage: $0 file1 file2"
    exit 8
fi

if [[ ! -d $1 ]]
then
    echo "Unable to find $1 or $1 is not a directory"
    exit 9
fi

if [[ ! -d $2 ]]
then
    echo "Unable to find $2 or $2 is not a directory"
    exit 9
fi

((CheckCount=0))
((MatchCount=0))
((AlreadyLinked=0))
tty -s
TTYStat=$?
find $1 -type f -print |
    sort |
    while read candidate
    do
       ((CheckCount=$CheckCount+1))
       trailing_name=${candidate#$1}
       filename="$2$trailing_name"
       if [[ -f "$filename" ]]
       then
	       # Same file name in both trees.  Are they already linked?
	       if [[ `stat -c %d-%i "$filename"` -eq `stat -c %d-%i "$candidate"` ]]
	       then
		   # Already linked.
	           ((AlreadyLinked=$AlreadyLinked+1))
	       else
		   # Not already linked.  Are they the same?
		       cmp -s "$filename" "$candidate"
		       if (( $? == 0 ))
		       then
		           ln -f "$candidate" "$filename"
		           ((MatchCount=MatchCount+1))
		       fi
	       fi
       fi
       if [[ ( $TTYStat -eq 0 ) && ( $CheckCount = *00 ) ]]
       then
		printf "\r$CheckCount files checked; $MatchCount new matches; $AlreadyLinked already linked\r" > /dev/tty
       fi
       echo "link-dups complete: $CheckCount files checked; $MatchCount new matches; $AlreadyLinked already linked"
    done |
    tail -1
exit 0

