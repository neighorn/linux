#! /usr/bin/perl
#
# Load IPTables - because I could never get iptables-restore to work.
#

use strict;
use warnings;
use Sys::Hostname;

require "getopts.pl";

our $opt_q;

Getopts("q");

my $FH;
open($FH,"/usr/local/etc/iptables.dat") ||
	die("Unable to open /usr/local/etc/iptables.dat : $!\n");

my $Line=0;
my $Errors=0;
system("ifrename") if (-e "/etc/iftab");
system("ifrename") if (-e "/etc/mactab");
my $hostname = hostname;

while (<$FH>) {
	$Line++;		# Increment the line counter
	next if (/^ *#/);	# Skip comments
	next if (/^ *$/);	# Skip blank lines
	if (/^\s*verify\s/i) {
		# Verify interfaces are assigned right.
		my(undef,$interface,@desired_mac)=split(/\s+/,$_);
		my $actual_mac =`ifconfig $interface|grep -i HWaddr`;
		$actual_mac =~ s/.*HWaddr\s+(\S+)\s*$/\U$1/i;
		chomp $actual_mac;
		my $Found = 0;
		foreach (@desired_mac) {
			s/^\s*(\S+)\s*/\U$1/;
			if ($_ eq $actual_mac) {
				$Found = 1;
				last;
			}
		}
		if (!$Found) {
			print "$interface has a MAC of $actual_mac instead of "
				. join(', ',@desired_mac)
				. "\n";
			$Errors++;
		}
	} elsif (/^\s*ifhost\s+(\S+)\s+(.*)$/i) {
		# Only run this on particular hosts.
		if ($hostname eq $1 and system($2)) {
			print STDERR "\tError detected on line $Line\n";
			$Errors++;
		}
	} elsif (system($_)) {
		print STDERR "\tError detected on line $Line\n";
		$Errors++;
	}
}
close $FH;

if ($Errors) {
	# Errors detected.
	warn "\n\t$Errors errors detected.  Going into lockdown mode.\n";

	#
	# Go into lockdown mode.
	#
	my @LockDownCmds = (
		"iptables -P INPUT DROP",
		"iptables -P OUTPUT DROP",
		"iptables -P FORWARD DROP",
		"iptables -F",
		"--SECURE--",
		"iptables -A INPUT       -p udp -m state --state ESTABLISHED,RELATED -j ACCEPT",
		"iptables -A INPUT       -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT",
		"iptables -A INPUT       -p icmp -m state --state ESTABLISHED,RELATED -j ACCEPT",
		"iptables -A INPUT -i lo -j ACCEPT",
		"iptables -A INPUT -s 71.245.97.115 -p icmp -j ACCEPT",
		"iptables -A INPUT -s 71.245.97.116 -p icmp -j ACCEPT",
		"iptables -A INPUT -s 71.245.97.115 -p tcp --dport 22 -j ACCEPT",
		"iptables -A INPUT -s 71.245.97.116 -p tcp --dport 22 -j ACCEPT",
		"iptables -A INPUT -j DROP",
		"iptables -A OUTPUT -o lo -j ACCEPT",
		"iptables -A OUTPUT -d 71.245.97.115 -j ACCEPT",
		"iptables -A OUTPUT -d 71.245.97.116 -j ACCEPT",
		"iptables -A OUTPUT -j DROP",
	);
	my $Secure = 0;
	foreach (@LockDownCmds) {
		if (/^--SECURE--$/) {
			# Found our marker.  We're basically secure now.
			$Secure=1;
			print "System is secure.\n";
			next;
		} else {
			# Found a command run it and see how it went.
			print "Running $_\n";
			my $Status = system($_);
			if ($Status) {
				# Command failed.  If secure just warn.
				warn "Command '$_' failed with status $Status: $!\n";
				if ($Secure) {
					# Secure.  Just warn.
				} else {
					# Critical cmd failed.  Go to superlockdown.
					warn "Going into super lockdown mode.\n";
					system("ifconfig eth0 down");
					system("ifconfig eth1 down");
					system("ifconfig eth2 down");
					system("ifconfig eth3 down");
					last;
				}
			}
		}
	}
		
	exit(8);
} else {
	# No errors detected.
	if (! $opt_q) {print "\n\tNo errors detected.\n"};
	exit(0);
}
exit $Errors;
